version: '3.7'
services:
  roulette-backend:
    #build:
      #context: .
      #dockerfile: /modules/controller/src/main/scala/Roulette/controller/Dockerfile
    image: nielshen/roulette:backend-latest
    ports:
      - "8080:8080"
    networks:
      - roulette-net
    stdin_open: true  # Hält stdin offen
    tty: true         # Weist ein Pseudo-TTY zu
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - "JAVA_OPTS=-Dplay.http.secret.key=abcdefghijk"


  roulette-frontend:
    #build:
      #context: .
      #dockerfile: /modules/userInterface/src/main/scala/Roulette/userInterface/Dockerfile
    image: nielshen/roulette:frontend-latest
    ports:
      - "8081:8081"
    networks:
      - roulette-net
    #depends_on:
      #- roulette-backend
    stdin_open: true  # Hält stdin offen
    tty: true         # Pseudo-TTY zuzuweisen
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  roulette-net:

#docker ps
#docker attach NAME_CONTAINER
#bet 1 e e 13
#d

#Use docker swarm:

#docker stack deploy -c docker-compose.yml meinStack
#docker service ls